1. 모폴로지 처리
영상의 밝은 영역이나 어두운 영역을 축소 또는 확대하는 기법
    cv2.getStructuringElement(구조 요소의 모양, 사이즈)
    구조 요소의 모양
        cv2.MORPH_RECT: 사각형
        cv2.MORPH_ELLIPSE: 타원형
        cv2.MORPH_CROSS: 십자형

1) 침식(erosion) 연산
    cv2.erode(영상, 구조요소, 출력영상, 고정점 위치)
    - 이미지를 깎아 내는 연산
    - 객체 크기는 감소하고 배경은 확대
    - 작은 크기의 객체(잡음)제거 효과가 있음
    - 어두운 부분의 노이즈를 제거하는 효과

2) 팽창(dilation) 연산
    cv2.dilate(영상, 구조요소, 출력영상, 고정점 위치)
    - 물체의 주변을 확장하는 연산
    - 팽창 연산은 객체 외곽을 확대시키는 연산
    - 객체 크기가 증가되고 배경은 감소
    - 객체 내부의 홀이 있다면 홀을 채울 수 있음
    - 밝은 부분의 노이즈를 제거하는 효과

3) 열림(Opening)
- 팽창 연산과 침식 연산의 조합
- 침식 연산을 적용한 다음, 팽창 연산을 적용
- 침식 연산으로 인해 밝은 영역이 줄어들고, 어두운 영역이 늘어남
- 객체 크기 감소를 원래대로 복구할 수 있음
- 작은 객체를 제거하고 구멍을 메우는데 사용

4) 닫힘(closing)
- 팽창 연산과 침식 연산의 조합
- 팽창 연산을 적용한 다음, 침식 연산을 적용
- 어두운 영역이 줄어들고 밝은 영역이 늘어남
- 늘어난 영역을 다시 복구하기 위해 침식 연산을 적용하면 밝은 영역이 줄어들고 어두운 영역이 늘어남
- 작은 구멍을 메우고 끊어진 객체를 연결하는 데 사용

5) 그레디언트(Gradient)
- 영상에 팽창 연산을 적용한 결과에서 영상에 침식 연산을 적용한 결과를 뺌(경계가 강조된 영상을 생성)
- 엣지 검출, 객체의 윤곽 추출, 영상 분할 등에 사용


2. 레이블링
- 이진화, 모폴로지를 수행하면 객체와 배경 영역을 구분할 수 있게됨 -> 객체 단위 분석을 통해
각 객체를 분할하여 특징을 분석하고 객체의 위치, 크기 정보, 모양 분석, ROI 추출 등이 가능함
- 서로 연결되어 있는 객체 픽셀에 고유번호를 할당하여 영역 기반 모양분석, 레이블맵, 바운딩 박스
픽셀 개수, 무게 중심, 좌표 등을 반환할 수 있게 함
    cv2.connectedComponents(영상, 레이블맵)
    레이블맵: 픽셀 연결 관계(4방향 연결, 8방향 연결)
    return: 객체 개수, 레이블 맵 행렬

    cv2.connectedComponentsWithStats(영상, 레이블맵)
    return: 객체 개수, 레이블 맵 행렬, (객체 위치, 가로세로길이, 면적 등 행렬), 무게 중심 정보


3. 객체의 외곽선 검출
    cv2.findContours(영상, 검출모드, 외곽선 좌표 근사화 방법)
    검출모드
        RETR_EXTERNAL: 객체 외부 외곽선만 검출
        RETR_LIST: 객체 외부, 내부 외곽선을 모두 검출
        RETR_CCOMP: 모든 외곽선 검출, 2단계 계층 구조를 구성
    외곽선 좌표 근사화 방법
        CHAIN_APPROX_NONE: 모든 외곽선 좌표를 저장
        CHAIN_APPROX_SIMPLE: 외곽선 중에서 수평, 수직, 대각선 성분의 끝점만 지정
    - 레이블링과 함께 영상에서 객체의 정보를 검출하는 방법 중 하나
    - 이진화된 영상에서 검출되며, 배경 영역과 닿아있는 픽셀을 찾아 외곽선으로 인식
    - 외곽선을 객체 외부 뿐 아니라, 내부에서도 생길 수 있음

4. 외곽선 그리기
    cv2.drawContours(영상, 외곽선 좌표 정보, 외곽선 인덱스, 색상, 두께)
    외곽선 인덱스: -1을 지정하면 모든 외곽선을 그림

    cv2.arcLength(외곽선 좌표, 폐곡선 여부)
    외곽선의 길이 구하기

    cv2.coutourArea(외곽선 좌표, False)
    폐곡선으로 되어있는 외곽선 내의 면적 구하기

    cv2.boundingRect(외곽선 좌표)
    바운딩 박스 구하기

5. 외곽선 근사화
검출한 외곽선 정보를 분석하여 정점(꼭짓점) 수가 적은 외곽선 또는 다각형으로 표현할 수 있게 만드는 것
    cv2.approxPolyDP(외곽선 좌표, 근사화 정밀도 조절, 폐곡선 여부)
    근사화 정밀도 조절: 입력 외곽선과 근사화된 외곽선 사이의 최대 길이. 값이 작을수록 다각형이
    정확해지고, 꼭지점 수가 늘어남

    cv2.isContourConvex()
    contour에 볼록 부분이 있는지 체크(있으면 True, 없으면 False)

    cv2.convexHull()
    볼록 외피를 계산. 주어진 점 집합을 둘러싸는 가장 작은 볼록 다각형을 반환

6. OCR(Optical Character Recognition)
- 광학 문자 인식
- 영상이나 문서에서 텍스트를 자동으로 인식하고 컴ㅂ퓨터가 이행할 수 있는 텍스트 데이터로 변환하는 프로세스

    