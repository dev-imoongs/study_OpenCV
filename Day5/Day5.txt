1. 영상의 이진화(binarization)
- 픽셀을 검은색 또는 흰색과 같이 두 개의 값으로 나누는 작업
- 영상에서 의미있는 관심 영역(ROI)
-
- 영상의 이진화
    cv2.threshold(영상, 임계값, 최대값, 플래그)


    플래그
    cv2.THRESH_BINARY: 픽셀값이 임계값을 넘으면 최대값으로 지정하고 넘지 못하면 0으로 지정
    cv2.THRESH_BINARY_INV: THRESH_BINARY_INV의 반대
    cv2.THRESH_TRUNC: 픽셀값이 임계값을 넘으면 최대값으로 지정하고, 넘지 못하면 원래값을 유지
    cv2.THRESH_TOZERO: 픽셀값이 임계값을 넘으면 원래 값을 유지하고, 넘지 못하면 0으로 지정
    cv2.THRESH_TOZERO_INV: THRESH_TOZERO의 반대

2. 오츠의 이진화 알고리즘
- 자동 이진화
- 자동으로 임계값을 구하는 알고리즘. 임계값을 구분하는 가장 좋은 방법으로 사용
    cv2.threshold(영상, 임계값, 최대값, 플래그 | cv2. THRESH_OTSU)
- 임계값을 임의로 정해 픽셀을 두 부류로 나누고 두 부류의 명암 분포를 구하는 작업을 반복하여
모든 경우의 수 중에서 두 부류의 명암 분류가 가장 균일할 때의 임계값을 선택

3. 지역 이진화
- 균일하지 않은 조명환경에서 사용하는 이진화 방법
- 전체 구역을 N등분하고 각각의 구역에 이진화를 한 뒤에 이어 붙이는 방법
- 여러개의 임계값을 이용할 수 있음

문제
rice.png를 이용하여 가로, 세로 4등분하고 자동 이진화를 적용해보자.

4. 적응형 이진화
- 노이즈를 제거한 뒤에 Otsu 이진화를 적용
- 영상을 여러 영역으로 나눈 뒤, 그 주변 픽셀 값만 활용하여 임계값을 구함
    cv2.adaptiveThreshold(영상, 임계값을 만족하는 픽셀에 적용할 값, 임계값 결정 방법,
    Threshold 적용방법, 블록사이즈, 가감할 상수)
    임계값을 만족하는 픽셀에 적용할 값: 총 픽셀의 개수(255)
    임계값 결정 방법
        cv2.ADAPTIVE_THRESH_MEAN_C: 이웃 픽셀의 평균으로 결정 -> 선명하지만 잡티가 많아짐
        cv2.ADAPTIVE_THRESH_GAUSSIAN_C: 가우시안 분포에 따른 가중치의 합으로 결정

5. 이미지 유사도
- 픽셀 값의 분포가 서로 비슷하다면 유사한 이미지일 확률이 높음
    cv2.compareHist(히스토그램1, 히스토그램2, 알고리즘)
        cv2.HISTCMP_CORREL: 상관관계(1: 완전 일치, -1: 완전 불일치, 0: 무관계)
        cv2.HISTCMP_CHISQR: 카이제곱(0: 완전 일치, 무한대: 완전 불일치)
        cv2.HISTCMP_INTERSECT: 교차(1: 완전 일치, 0: 완전 불일치)
        cv2.HISTCMP_BHATTACHARYYA: 밀도함수(0: 완전 일치, 1: 완전 불일치)


* 보간법 알고리즘(interpolation)
        cv2.INTER_LINEAR: 인접한 4개의 픽셀 값에 거리 가중치 사용 -> 속도는 빠르지만 퀄리티가 좀 떨어짐
        cv2.INTER_NEAREST: 가장 가까운 픽셀 값 사용 -> 속도가 가장 빠르지만 퀄리티가 가장 많이 떨어짐
        cv2.INTER_AREA: 픽셀 영역 관계를 이용한 재샘플링 -> 영역적인 정보를 추출해서 결과 영상을 세팅하는 방법, 다운 샘플링시 효과적
        cv2.INTER_CUBIC: 인접한 16개의 픽셀 값에 가중치를 사용 -> 퀄리티는 가장 좋지만 속도가 떨어짐

2) 크기 변환(resize)
영상의 크기를 원본 영상보다 크게 또는 작게 만드는 변환
    cv2.resize(영상, 결과, x와 y방향 스케일 비율, 보간법)

3) 회전(rotation)
영상을 특정 각도만큼 회전시키는 변환(반시계 방향)
    cv2.getRotationMatrix2D(중심좌표, 회전각도, 확대비율) -> affine 행렬
    회전각도: 반시계방향(기본값), 음수는 시계방향
    확대비율: 0 ~ 1 사이의 실수

4) 투시 변환(perspective)
- 직사각형 형태의 영상을 임의의 입체감 있는 사각형 형태로 변경할 수 있는 변환
- 원본 영상에 있는 직선은 결과 영상에서 그대로 유지되지 않고 평행 관계가 깨질 수 있음
- 투시 변환은 보통 3*3 크기의 실수 행렬로 표현
(8개의 파라미터로 표현할 수 있지만, 좌표 계산 편의상 9개의 원소를 갖는 행렬로 표현)
    cv2.getPerspectiveTransform(영상, 4개의 결과 좌표점) -> 투시 변환 행렬
    cv2.warpPerspective(영상, 투시 변환 행렬, 결과 영상 크기)